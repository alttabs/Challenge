{
  "openapi": "3.0.0",
  "info": {
    "title": "SendSpark API",
    "version": "1.0.0",
    "description": "API documentation for SendSpark"
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's work email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password"
                  },
                  "company": {
                    "type": "string",
                    "description": "The user's company"
                  },
                  "jobTitle": {
                    "type": "string",
                    "description": "The user's job title"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "The user's first name"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "The user's last name"
                  }
                },
                "required": [
                  "workEmail",
                  "password",
                  "company",
                  "jobTitle",
                  "firstName",
                  "lastName"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "A user with this email already exists"
          },
          "500": {
            "description": "Error creating user"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "description": "Retrieves a list of all users.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of users per page"
          },
          {
            "in": "query",
            "name": "company",
            "schema": {
              "type": "string"
            },
            "description": "Filter users by company name"
          },
          {
            "in": "query",
            "name": "jobTitle",
            "schema": {
              "type": "string"
            },
            "description": "Filter users by job title"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "currentPage": {
                      "type": "integer"
                    },
                    "totalPages": {
                      "type": "integer"
                    },
                    "totalUsers": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching users"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "summary": "Delete a user by ID",
        "description": "Deletes a user by their ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error deleting user"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user",
        "description": "Logs in a user and returns a JWT token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's work email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password"
                  }
                },
                "required": [
                  "workEmail",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "workEmail": {
                          "type": "string",
                          "format": "email"
                        },
                        "firstName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Error logging in"
          }
        }
      }
    },
    "/users/verify": {
      "get": {
        "summary": "Verify JWT token",
        "description": "Verifies the JWT token and returns user information.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "workEmail": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
